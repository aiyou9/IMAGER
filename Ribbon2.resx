<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xjrjxv0/rqRnMIzDIKEAAAAASUVORK5CYII=
</value>
  </data>
</root>